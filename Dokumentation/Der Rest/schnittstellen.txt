
/api
-   /auth
-   -   /login POST (userId, password) => {userId, rolle, request_token}
-   -   /woAmI POST (request_token) => {userId, vorname, name}

-   /user
-   -   /create POST (vorname, name, password, rolle, request_token) => { userId, loginName, vorname, name, rolle }
-   -   /edit POST (userId, request_token, vorname?, name?, password?, rolle? ) => userId
-   -   /setDeactivated POST (userId, deactivated, request_token) => deactivatedUserId
-   -   /getData (userId, request_token) => { userId, loginName, vorname, name, rolle }
-   -   /getAll POST (request_token) => [{userId, loginName, vorname, name, rolle, deactivated}]
-   -   -   /forCourse POST (courseId, request_token) => [{userId, vorname, name, rolle}]
-   -   -   /forTask POST (taskId, request_token) => [{userId, vorname, name, rolle, evaluation, annotation}]

-   /admin
-   -   /create POST (name, password, request_token) => adminId (generiert aus name & evtl. nr)
-   -   /delete POST (adminId, request_token) => deletedAdminId

-   /task
-   -   /create POST (title, description, course, deadline, graded, request_token) => taskId
-   -   /edit POST (taskId, request_token, title?, description?, deadline?) => taskId
-   -   /getAll
-   -   -   /forCourse POST (courseId, request_token) => [{taskId, title, description, courseId, courseName, deadline, graded}] (nach deadline sortiert)
-   -   -   /forUser POST (userId, request_token) => [{taskId, title, description, courseId, courseName, deadline, graded}] (nach deadline sortiert)

-   /evaluation
-   -   /evaluateTask POST (taskId, request_token, users: [
            {userId, evalutation (bool/grade), annotation}
        ]) => taskId
-   -   getAll
-   -   -   /forUser POST (userId, request_token) => [{ taskId, evaluation, annotation, courseId, courseName, year, subjectId, subjectName }]
-   -   -   /forTask POST (taskId, request_token) => [{ userId, userVorname, userName, evaluation, annotation }]

-   /course
-   -   /create POST (year, subjectId, request_token) => [{courseId, courseName}]
-   -   /getAll
-   -   -   /forUser POST (userId, request_token) => [{courseId, courseName, year, subjectId, subjectName}]
-   -   /users
-   -   -   /remove POST ({users: [{userId}], courseId, request_token}) => courseId

-   /subject
-   -   /create POST (name, request_token) => subjectId
-   -   /edit POST (subjectId, newName, request_token) => editedSubjectId
-   -   /setDeactivated POST (subjectId, deactivated, request_token) => deactivatedSubjectId
-   -   /getAll POST (request_token) => [{subjectId, subjectName, deactivated}]
